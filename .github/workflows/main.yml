name: Release Automation

on:
  push:
    # Trigger on versioned tags (e.g., v1.0.0, v20.15.10)
    tags:
      - 'v[0-9]+.*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"  # Ensure compatibility with your project

      # Step 3: Install project dependencies
      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      # Step 5: Build the project
      - name: Build Project
        run: npm run build  # Ensure you have a build script in package.json

      # Step 6: Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.githubtoken }}  # Use GitHub's default token
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: |
            Changes in this Release:
            - Add change details here.
          draft: false
          prerelease: false

      # Step 7: Zip the build folder
      - name: Zip the Build Folder
        run: zip -r build.zip ./build

      # Step 8: Upload Release Assets
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
